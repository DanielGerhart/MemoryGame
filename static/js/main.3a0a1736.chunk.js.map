{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","workers","gameOver","setState","console","log","this","forEach","card","count","alert","find","o","i","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"quEAWeA,G,MARF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCDxBC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMU,YCS1CC,G,MATA,SAAAX,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,UAAf,UACUD,EAAMY,MADhB,eACmCZ,EAAMa,c,OC0D9BC,E,2MAzDbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,UAAW,G,EAGbI,SAAW,WAeT,OAdI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAACL,UAAW,EAAKE,MAAMH,QAAQ,WAC3CO,QAAQC,IAAIC,KAAKN,MAAMF,cAG3B,EAAKE,MAAMC,QAAQM,SAAQ,SAAAC,GACzBA,EAAKC,MAAQ,KAEU,KAArB,EAAKT,MAAMH,QACba,MAAM,iBACR,EAAKP,SAAS,CAACN,MAAO,KAEtBa,MAAM,yBAAD,OAA0B,EAAKV,MAAMH,QAC1C,EAAKM,SAAS,CAACN,MAAO,KACf,G,EAGTT,WAAa,SAAAC,GACX,EAAKW,MAAMC,QAAQU,MAAK,SAACC,EAAGC,GAC1B,GAAID,EAAEvB,KAAOA,EAAI,CACf,GAAwB,IAArBY,EAAQY,GAAGJ,MAMZ,OALAR,EAAQY,GAAGJ,MAAQR,EAAQY,GAAGJ,MAAQ,EACtC,EAAKN,SAAS,CAACN,MAAQ,EAAKG,MAAMH,MAAQ,IAAI,WAC5CO,QAAQC,IAAIC,KAAKN,MAAMH,UAEzB,EAAKG,MAAMC,QAAQa,MAAK,kBAAMC,KAAKC,SAAW,OACvC,EAEP,EAAKd,gB,wEAKH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQL,MAAOS,KAAKN,MAAMH,MAAOC,UAAWQ,KAAKN,MAAMF,WAAvD,eACCQ,KAAKN,MAAMC,QAAQgB,KAAI,SAAAT,GAAI,OAC1B,kBAAC,EAAD,CACEpB,WAAY,EAAKA,WACjBC,GAAImB,EAAKnB,GACT6B,IAAKV,EAAKnB,GACVI,MAAOe,EAAKf,gB,GAlDN0B,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3a0a1736.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n  <div className=\"header\">\r\n    <div className=\"title\">{props.children}</div>\r\n    <div className=\"scores\">\r\n      Score: {props.score} Highscore: {props.highscore}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\nimport workers from \"./workers.json\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    workers,\r\n    score: 0,\r\n    highscore: 0\r\n  };\r\n\r\n  gameOver = () => {\r\n    if (this.state.score > this.state.highscore) {\r\n      this.setState({highscore: this.state.score}, function() {\r\n        console.log(this.state.highscore);\r\n      });\r\n    }\r\n    this.state.workers.forEach(card => {\r\n      card.count = 0;\r\n    });\r\n    if (this.state.score === 12) {\r\n      alert(`You Won!!!!!!`);\r\n    this.setState({score: 0});\r\n    }\r\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\r\n    this.setState({score: 0});\r\n    return true;\r\n  }\r\n\r\n  clickCount = id => {\r\n    this.state.workers.find((o, i) => {\r\n      if (o.id === id) {\r\n        if(workers[i].count === 0){\r\n          workers[i].count = workers[i].count + 1;\r\n          this.setState({score : this.state.score + 1}, function(){\r\n            console.log(this.state.score);\r\n          });\r\n          this.state.workers.sort(() => Math.random() - 0.5)\r\n          return true; \r\n        } else {\r\n          this.gameOver();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Header score={this.state.score} highscore={this.state.highscore}>Memory Game</Header>\r\n        {this.state.workers.map(card => (\r\n          <Card\r\n            clickCount={this.clickCount}\r\n            id={card.id}\r\n            key={card.id}\r\n            image={card.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}